# 本地测试用
server:
  port: 8080
  servlet:
    session:
      cookie:
        domain: collect.bilibilianime.com
service:
  corsOrigin: "https://collect.bilibilianime.com" # 指定前端指定域名

spring:
  data:
    mongodb:
      uri: ${MONGO_URI}
      database: recommender

  redis:
    host: ${REDIS_HOST}
    port: 6379
    lettuce:
      pool:
        max-active: 1024
        max-wait: -1s
        max-idle: 200
  # 热部署
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java

  # 这肯定要改啊, 我的密码完全暴露了, 代码会公开的
  rabbitmq:
    host: ${RABBITMQ_HOST}
    username: ${RABBITMQ_USERNAME}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: /
    connection-timeout: 15000
    #开启 return 确认机制
    publisher-returns: true
    #设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
    template.mandatory: true
    #开启 confirm 确认机制
    publisher-confirm-type: correlated
    #采用手动应答
    listener:
      simple:
        acknowledge-mode: manual

  datasource:
    name: collect
    url: jdbc:mysql://${MYSQL_HOST}/COLLECT?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    # 线上为了隔离不同网络, mysqldb 是容器名
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver


  qcloud:
    SecretId: ${QCLOUD_ID}
    SecretKey: ${QCLOUD_KEY}
    area: ap-shanghai
    bucketName: "rikka-1305663872"
    prefix: rikka
    url: ${QCLOUD_URL}
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB

mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.example.backendcollect.po

logging:
  config: classpath:logback-dev.xml
